// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Employee {
  id            String          @id @default(uuid())
  firstName     String
  lastName      String
  nationality   String?
  profil        String?
  gender        String
  age           Int?
  address       String?
  phone         String?
  email         String?
  maritalStatus String?
  children      Int?
  post          String
  Contract      Contract[]
  Leave         Leave[]
  Sanction      Sanction[]
  PayDayAdvance PayDayAdvance[]
  PaySlip       PaySlip[]
  updatedAt     DateTime        @updatedAt
  createdAt     DateTime        @default(now())
  OtherDocument OtherDocument[]
}

model Contract {
  id         String    @id @default(uuid())
  file       String
  status     Boolean?  @default(false)
  type       String
  startDate  String
  endDate    String
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
}

model Leave {
  id         String    @id @default(uuid())
  status     Boolean?  @default(false)
  motif      String?
  file       String?
  startDate  String?
  endDate    String?
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
}

model Sanction {
  id         String    @id @default(uuid())
  status     Boolean?  @default(false)
  motif      String?
  file       String?
  startDate  String?
  endDate    String?
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId String?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
}

model PaySlip {
  id           String    @id @default(uuid())
  salary       String
  file         String?
  payementDate DateTime
  comment      String?
  employee     Employee? @relation(fields: [employeeId], references: [id])
  employeeId   String?
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
}

model PayDayAdvance {
  id           String    @id @default(uuid())
  value        String
  file         String?
  payementDate DateTime
  motif        String?
  employee     Employee? @relation(fields: [employeeId], references: [id])
  employeeId   String?
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
}

model OtherDocument {
  id                  String            @id @default(uuid())
  document            String
  isExpired           Boolean?          @default(false)
  comment             String?
  startDate           String?
  endDate             String?
  employee            Employee          @relation(fields: [employeeId], references: [id])
  employeeId          String
  updatedAt           DateTime          @updatedAt
  createdAt           DateTime          @default(now())
  otherDocumentType   OtherDocumentType @relation(fields: [otherDocumentTypeId], references: [id])
  otherDocumentTypeId String
}

model OtherDocumentType {
  id            String          @id @default(uuid())
  name          String          @unique
  OtherDocument OtherDocument[]
}

model User {
  id        String   @id @default(uuid())
  username  String
  password  String
  role      String   @default("LOW")
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
